{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["const PT_PER_PX = 1;\nconst PT_PER_REM = 12;\n\nexport function round(value: number) {\n  return Math.round(value * 1e6) / 1e6;\n}\n\nexport function isNumeric(value: string) {\n  if (value.startsWith(\".\")) {\n    value = `0${value}`;\n  }\n  return Number(value).toString() === value;\n}\n\nexport function capitalize(string: string) {\n  return `${string.charAt(0).toUpperCase()}${string.slice(1).toLowerCase()}`;\n}\n\nexport function rem(value: number) {\n  return round(PT_PER_REM * value);\n}\n\nexport function px(value: number) {\n  return round(PT_PER_PX * value);\n}\n","import resolveConfig from \"tailwindcss/resolveConfig\";\nimport { TailwindConfig, TailwindTheme } from \"tailwindcss/tailwind-config\";\nimport { capitalize, isNumeric, px, rem } from \"./utils\";\n\ntype StyleSheet = Record<string, string | number>;\n\nconst exactUtilities: Record<string, StyleSheet> = {\n  // Layout\n  block: { display: \"block\" },\n  \"inline-block\": { display: \"inline-block\" },\n  inline: { display: \"inline\" },\n  flex: { display: \"flex\" },\n  \"inline-flex\": { display: \"inline-flex\" },\n  hidden: { display: \"none\" },\n  \"object-contain\": { objectFit: \"contain\" },\n  \"object-cover\": { objectFit: \"cover\" },\n  \"object-fill\": { objectFit: \"fill\" },\n  \"object-none\": { objectFit: \"none\" },\n  \"object-scale-down\": { objectFit: \"scale-down\" },\n  \"overflow-auto\": { overflow: \"auto\" },\n  \"overflow-hidden\": { overflow: \"hidden\" },\n  \"overflow-clip\": { overflow: \"clip\" },\n  \"overflow-visible\": { overflow: \"visible\" },\n  \"overflow-scroll\": { overflow: \"scroll\" },\n  \"overflow-x-auto\": { overflowX: \"auto\" },\n  \"overflow-y-auto\": { overflowY: \"auto\" },\n  \"overflow-x-hidden\": { overflowX: \"hidden\" },\n  \"overflow-y-hidden\": { overflowY: \"hidden\" },\n  \"overflow-x-clip\": { overflowX: \"clip\" },\n  \"overflow-y-clip\": { overflowY: \"clip\" },\n  \"overflow-x-visible\": { overflowX: \"visible\" },\n  \"overflow-y-visible\": { overflowY: \"visible\" },\n  \"overflow-x-scroll\": { overflowX: \"scroll\" },\n  \"overflow-y-scroll\": { overflowY: \"scroll\" },\n  static: { position: \"static\" },\n  fixed: { position: \"fixed\" },\n  absolute: { position: \"absolute\" },\n  relative: { position: \"relative\" },\n  // Flexbox\n  \"flex-row\": { flexDirection: \"row\" },\n  \"flex-row-reverse\": { flexDirection: \"row-reverse\" },\n  \"flex-col\": { flexDirection: \"column\" },\n  \"flex-col-reverse\": { flexDirection: \"column-reverse\" },\n  \"flex-wrap\": { flexWrap: \"wrap\" },\n  \"flex-wrap-reverse\": { flexWrap: \"wrap-reverse\" },\n  \"flex-nowrap\": { flexWrap: \"nowrap\" },\n  \"flex-1\": { flex: \"1 1 0%\" },\n  \"flex-auto\": { flex: \"1 1 auto\" },\n  \"flex-initial\": { flex: \"0 1 auto\" },\n  \"flex-none\": { flex: \"none\" },\n  grow: { flexGrow: 1 },\n  \"grow-0\": { flexGrow: 0 },\n  shrink: { flexShrink: 1 },\n  \"shrink-0\": { flexShrink: 0 },\n  \"justify-start\": { justifyContent: \"flex-start\" },\n  \"justify-end\": { justifyContent: \"flex-end\" },\n  \"justify-center\": { justifyContent: \"center\" },\n  \"justify-between\": { justifyContent: \"space-between\" },\n  \"justify-around\": { justifyContent: \"space-around\" },\n  \"justify-evenly\": { justifyContent: \"space-evenly\" },\n  \"content-start\": { alignContent: \"flex-start\" },\n  \"content-end\": { alignContent: \"flex-end\" },\n  \"content-center\": { alignContent: \"center\" },\n  \"content-between\": { alignContent: \"space-between\" },\n  \"content-around\": { alignContent: \"space-around\" },\n  \"content-evenly\": { alignContent: \"space-evenly\" },\n  \"items-start\": { alignItems: \"flex-start\" },\n  \"items-end\": { alignItems: \"flex-end\" },\n  \"items-center\": { alignItems: \"center\" },\n  \"items-baseline\": { alignItems: \"baseline\" },\n  \"items-stretch\": { alignItems: \"stretch\" },\n  \"self-auto\": { alignSelf: \"auto\" },\n  \"self-start\": { alignSelf: \"flex-start\" },\n  \"self-end\": { alignSelf: \"flex-end\" },\n  \"self-center\": { alignSelf: \"center\" },\n  \"self-baseline\": { alignSelf: \"baseline\" },\n  \"self-stretch\": { alignSelf: \"stretch\" },\n  // Typography\n  italic: { fontStyle: \"italic\" },\n  \"not-italic\": { fontStyle: \"normal\" },\n  \"text-left\": { textAlign: \"left\" },\n  \"text-center\": { textAlign: \"center\" },\n  \"text-right\": { textAlign: \"right\" },\n  \"text-justify\": { textAlign: \"justify\" },\n  underline: { textDecorationLine: \"underline\" },\n  overline: { textDecorationLine: \"overline\" },\n  \"decoration-solid\": { textDecorationStyle: \"solid\" },\n  \"decoration-double\": { textDecorationStyle: \"double\" },\n  \"decoration-dotted\": { textDecorationStyle: \"dotted\" },\n  \"decoration-dashed\": { textDecorationStyle: \"dashed\" },\n  \"decoration-wavy\": { textDecorationStyle: \"wavy\" },\n  \"line-through\": { textDecorationLine: \"line-through\" },\n  \"no-underline\": { textDecorationLine: \"none\" },\n  uppercase: { textTransform: \"uppercase\" },\n  lowercase: { textTransform: \"lowercase\" },\n  capitalize: { textTransform: \"capitalize\" },\n  \"normal-case\": { textTransform: \"none\" },\n  truncate: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  },\n  \"text-ellipsis\": { textOverflow: \"ellipsis\" },\n  \"text-clip\": { textOverflow: \"clip\" },\n  // Backgrounds\n  \"bg-inherit\": { backgroundColor: \"inherit\" },\n  \"bg-current\": { backgroundColor: \"currentColor\" },\n  \"bg-transparent\": { backgroundColor: \"transparent\" },\n  // Borders\n  \"border-solid\": { borderStyle: \"solid\" },\n  \"border-dashed\": { borderStyle: \"dashed\" },\n  \"border-dotted\": { borderStyle: \"dotted\" },\n  \"border-double\": { borderStyle: \"double\" },\n  \"border-hidden\": { borderStyle: \"hidden\" },\n  \"border-none\": { borderStyle: \"none\" },\n};\n\nconst utilityPatterns: Record<string, string | [string, string | string[]]> = {\n  // Layout\n  object: \"objectPosition\",\n  top: \"top\",\n  right: \"right\",\n  bottom: \"bottom\",\n  left: \"left\",\n  z: \"zIndex\",\n  // Flexbox\n  basis: \"flexBasis\",\n  flex: \"flex\",\n  grow: \"flexGrow\",\n  shrink: \"flexShrink\",\n  order: \"order\",\n  // Spacing\n  m: \"margin\",\n  mx: [\"margin\", [\"marginLeft\", \"marginRight\"]],\n  my: [\"margin\", [\"marginTop\", \"marginBottom\"]],\n  ml: [\"margin\", \"marginLeft\"],\n  mr: [\"margin\", \"marginRight\"],\n  mt: [\"margin\", \"marginTop\"],\n  mb: [\"margin\", \"marginBottom\"],\n  p: \"padding\",\n  px: [\"padding\", [\"paddingLeft\", \"paddingRight\"]],\n  py: [\"padding\", [\"paddingTop\", \"paddingBottom\"]],\n  pl: [\"padding\", \"paddingLeft\"],\n  pr: [\"padding\", \"paddingRight\"],\n  pt: [\"padding\", \"paddingTop\"],\n  pb: [\"padding\", \"paddingBottom\"],\n  // Sizing\n  w: \"width\",\n  \"min-w\": \"minWidth\",\n  \"max-w\": \"maxWidth\",\n  h: \"height\",\n  \"min-h\": \"minHeight\",\n  \"max-h\": \"maxHeight\",\n  // Typography\n  leading: \"lineHeight\",\n  tracking: \"letterSpacing\",\n  indent: \"textIndent\",\n  // Backgrounds\n  bg: \"backgroundColor\",\n  // Borders\n  rounded: \"borderRadius\",\n  // Effects\n  opacity: \"opacity\",\n  // Transforms\n  origin: \"transformOrigin\",\n};\n\nconst negativeProperties = [\n  \"zIndex\",\n  \"top\",\n  \"right\",\n  \"bottom\",\n  \"left\",\n  \"translate\",\n  \"scale\",\n  \"rotate\",\n  \"order\",\n  \"margin\",\n];\n\ninterface Value {\n  value: string | number;\n  type?: \"color\" | \"unit\" | \"numeric\" | \"other\";\n  isCustom?: boolean;\n  additionalProperties?: StyleSheet;\n}\n\ninterface Config {\n  theme: TailwindTheme;\n}\n\nfunction createTw(config?: Config) {\n  const { theme } = resolveConfig({\n    // Disable Tailwind content warning\n    content: [\"./dummy/path.js\"],\n    theme: config.theme ?? {},\n  });\n\n  const cache: Record<string, StyleSheet> = {};\n\n  function transformValue(\n    value: string | number,\n    property?: string,\n    isNegative?: boolean\n  ): string | number {\n    const sign = isNegative ? -1 : 1;\n\n    if (typeof value === \"number\") {\n      return sign * value;\n    }\n\n    switch (property) {\n      case \"lineHeight\":\n        // react-pdf only supports unitless line-heights\n        // https://github.com/diegomura/react-pdf/issues/912\n        if (value.endsWith(\"rem\")) {\n          return sign * Number(value.replace(\"rem\", \"\"));\n        }\n        return sign * Number(value);\n\n      default:\n        if (value.endsWith(\"px\")) {\n          return px(sign * Number(value.replace(\"px\", \"\")));\n        }\n        if (value.endsWith(\"rem\")) {\n          return rem(sign * Number(value.replace(\"rem\", \"\")));\n        }\n        if (value.endsWith(\"em\")) {\n          return rem(sign * Number(value.replace(\"em\", \"\")));\n        }\n        if (isNegative && negativeProperties.includes(property)) {\n          const suffix = [\"deg\", \"%\"].find((i) => value.endsWith(i));\n          if (suffix) {\n            return `${sign * Number(value.replace(suffix, \"\"))}${suffix}`;\n          }\n        }\n        if (isNumeric(value)) {\n          return sign * Number(value);\n        }\n        return value;\n    }\n  }\n\n  function getCustomValue(value: string) {\n    if (value.startsWith(\"[\") && value.endsWith(\"]\")) {\n      return value.slice(1, value.length - 1).replaceAll(\"_\", \" \");\n    }\n    return null;\n  }\n\n  function parseValue(\n    value: string,\n    property?: string,\n    isNegative?: boolean\n  ): Value {\n    const valueParts = value.split(\"-\");\n\n    // Custom value\n    const customValue = getCustomValue(value);\n    if (customValue) {\n      // Color\n      if (\n        [\"#\", \"rgb\", \"hsl\"].some((prefix) => customValue.startsWith(prefix))\n      ) {\n        return {\n          value: customValue,\n          type: \"color\",\n          isCustom: true,\n        };\n      }\n      // Unit\n      if ([\"px\", \"rem\"].some((suffix) => customValue.endsWith(suffix))) {\n        return {\n          value: transformValue(customValue, property, isNegative),\n          type: \"unit\",\n          isCustom: true,\n        };\n      }\n      // Other\n      return {\n        value: transformValue(customValue, property, isNegative),\n        type: \"other\",\n        isCustom: true,\n      };\n    }\n\n    // Color\n    // Exception for font-weight: black (not a color)\n    if (valueParts[0] in theme.colors && property !== \"fontWeight\") {\n      // TODO alpha colors like gray-500/50 etc\n      const color = (theme.colors as any)[valueParts[0]];\n      return {\n        value: typeof color === \"string\" ? color : color?.[valueParts[1]],\n        type: \"color\",\n      };\n    }\n\n    // Unit\n    const scaleName = [\"top\", \"right\", \"bottom\", \"left\"].includes(property)\n      ? \"inset\"\n      : property;\n    const config = (theme as any)[scaleName];\n    if (valueParts.length === 0 || !config) {\n      return { value: null };\n    }\n    const result = (\n      typeof config === \"function\"\n        ? config({ theme })?.[value]\n        : config?.[value]\n    ) as [string, StyleSheet] | string;\n\n    if (!result) {\n      return { value: null };\n    }\n\n    if (Array.isArray(result)) {\n      const additionalProperties =\n        result[1] && result[1] !== null && typeof result[1] === \"object\"\n          ? Object.fromEntries(\n              Object.entries(result[1]).map(([key, value]) => [\n                key,\n                transformValue(value, key),\n              ])\n            )\n          : null;\n\n      return {\n        value: transformValue(result[0], property, isNegative),\n        ...(additionalProperties ? { additionalProperties } : null),\n        type: \"unit\",\n      };\n    }\n\n    return {\n      value: transformValue(result, property, isNegative),\n      type: \"unit\",\n    };\n  }\n\n  function parseUtility(className: string): any {\n    const modifierParts = className.split(\":\");\n    const modifiers = modifierParts.slice(0, modifierParts.length - 1);\n    const utilityStr = modifierParts[modifierParts.length - 1];\n\n    if (utilityStr in exactUtilities) {\n      return exactUtilities[utilityStr];\n    }\n\n    const isNegative = utilityStr.startsWith(\"-\");\n    const utilityParts = utilityStr.slice(isNegative ? 1 : 0).split(\"-\");\n\n    for (let key in utilityPatterns) {\n      // Key can have multiple parts (eg. min-w)\n      const keyParts = key.split(\"-\");\n      const comparisonKey = utilityParts.slice(0, keyParts.length).join(\"-\");\n      if (key === comparisonKey) {\n        const rawValue = className.split(`${key}-`)[1];\n        const pattern = utilityPatterns[key];\n        const property = Array.isArray(pattern) ? pattern[0] : pattern;\n        const mappedProperties = Array.isArray(pattern)\n          ? Array.isArray(pattern[1])\n            ? pattern[1]\n            : [pattern[1]]\n          : [pattern];\n\n        if (isNegative && !negativeProperties.includes(property)) {\n          console.warn(`Property ${property} does not support negative values`);\n          return null;\n        }\n\n        const { value, additionalProperties } = parseValue(\n          rawValue,\n          property,\n          isNegative\n        );\n        if (value === null) {\n          continue;\n        }\n\n        return {\n          ...Object.fromEntries(mappedProperties.map((prop) => [prop, value])),\n          ...(additionalProperties ?? null),\n        };\n      }\n    }\n\n    switch (utilityParts[0]) {\n      case \"inset\": {\n        const direction = [\"x\", \"y\"].find((i) => i === utilityParts[1]);\n        const valueStr = utilityParts.slice(direction ? 2 : 1).join(\"-\");\n        const { value } = parseValue(valueStr, \"inset\", isNegative);\n        switch (direction) {\n          case \"x\":\n            return {\n              left: value,\n              right: value,\n            };\n          case \"y\":\n            return {\n              top: value,\n              bottom: value,\n            };\n          default:\n            return {\n              top: value,\n              right: value,\n              bottom: value,\n              left: value,\n            };\n        }\n      }\n\n      case \"font\": {\n        const valueStr = utilityParts.slice(1).join(\"-\");\n        const customValue = getCustomValue(valueStr);\n        if (customValue) {\n          if (isNumeric(customValue)) {\n            return {\n              fontWeight: parseInt(customValue),\n            };\n          }\n          return {\n            fontFamily: customValue,\n          };\n        }\n        if (valueStr in theme.fontFamily) {\n          const { value } = parseValue(valueStr, \"fontFamily\");\n          return {\n            fontFamily: value,\n          };\n        }\n        const { value } = parseValue(valueStr, \"fontWeight\");\n        return {\n          fontWeight: value,\n        };\n      }\n\n      case \"text\": {\n        const valueStr = utilityParts.slice(1).join(\"-\");\n        const { value, additionalProperties, type } = parseValue(\n          valueStr,\n          \"fontSize\"\n        );\n        if (type === \"color\") {\n          return { color: value };\n        }\n        return { fontSize: value, ...additionalProperties };\n      }\n\n      case \"decoration\": {\n        const valueStr = utilityParts.slice(1).join(\"-\");\n        const { value, type } = parseValue(valueStr, \"textDecorationColor\");\n        if (type === \"color\") {\n          return {\n            textDecorationColor: value,\n          };\n        }\n        // Only decoration color (not thickness) supported for now\n        return null;\n      }\n\n      case \"rounded\": {\n        const direction = [\"t\", \"r\", \"b\", \"l\", \"tl\", \"tr\", \"br\", \"bl\"].find(\n          (i) => i === utilityParts[1]\n        );\n        const valueStr = utilityParts.slice(direction ? 2 : 1).join(\"-\");\n        const { value } = parseValue(valueStr || \"DEFAULT\", \"borderRadius\");\n        switch (direction) {\n          case \"t\":\n            return {\n              borderTopLeftRadius: value,\n              borderTopRightRadius: value,\n            };\n          case \"r\":\n            return {\n              borderTopRightRadius: value,\n              borderBottomRightRadius: value,\n            };\n          case \"b\":\n            return {\n              borderBottomRightRadius: value,\n              borderBottomLeftRadius: value,\n            };\n          case \"l\":\n            return {\n              borderBottomLeftRadius: value,\n              borderTopLeftRadius: value,\n            };\n          case \"tl\":\n            return {\n              borderTopLeftRadius: value,\n            };\n          case \"tr\":\n            return {\n              borderTopRightRadius: value,\n            };\n          case \"br\":\n            return {\n              borderBottomRightRadius: value,\n            };\n          case \"bl\":\n            return {\n              borderBottomLeftRadius: value,\n            };\n          default:\n            return {\n              borderRadius: value,\n            };\n        }\n      }\n\n      case \"border\": {\n        // Border width or color\n        const direction = [\"x\", \"y\", \"t\", \"r\", \"b\", \"l\"].find(\n          (i) => i === utilityParts[1]\n        );\n        const valueStr = utilityParts.slice(direction ? 2 : 1).join(\"-\");\n        const { value, type } = parseValue(\n          valueStr || \"DEFAULT\",\n          \"borderWidth\"\n        );\n        const propertySuffix = capitalize(type === \"color\" ? \"color\" : \"width\");\n        switch (direction) {\n          case \"x\":\n            return {\n              [`borderLeft${propertySuffix}`]: value,\n              [`borderRight${propertySuffix}`]: value,\n            };\n          case \"y\":\n            return {\n              [`borderTop${propertySuffix}`]: value,\n              [`borderBottom${propertySuffix}`]: value,\n            };\n          case \"t\":\n            return { [`borderTop${propertySuffix}`]: value };\n          case \"r\":\n            return { [`borderRight${propertySuffix}`]: value };\n          case \"b\":\n            return { [`borderBottom${propertySuffix}`]: value };\n          case \"l\":\n            return { [`borderLeft${propertySuffix}`]: value };\n          default:\n            return {\n              [`border${propertySuffix}`]: value,\n            };\n        }\n      }\n\n      case \"scale\": {\n        const direction = [\"x\", \"y\"].find((i) => i === utilityParts[1]);\n        const valueStr = utilityParts.slice(direction ? 2 : 1).join(\"-\");\n        const { value } = parseValue(valueStr, \"scale\", isNegative);\n        switch (direction) {\n          case \"x\":\n            return {\n              transform: `scaleX(${value})`,\n            };\n          case \"y\":\n            return {\n              transform: `scaleY(${value})`,\n            };\n          default:\n            return {\n              transform: `scale(${value})`,\n            };\n        }\n      }\n\n      case \"rotate\": {\n        const { value } = parseValue(\n          utilityParts.slice(1).join(\"-\"),\n          \"rotate\",\n          isNegative\n        );\n        return {\n          transform: `rotate(${value})`,\n        };\n      }\n\n      case \"translate\": {\n        const direction = [\"x\", \"y\"].find((i) => i === utilityParts[1]);\n        const valueStr = utilityParts.slice(direction ? 2 : 1).join(\"-\");\n        const { value } = parseValue(valueStr, \"translate\", isNegative);\n        switch (direction) {\n          case \"x\":\n            return {\n              transform: `translateX(${value})`,\n            };\n          case \"y\":\n            return {\n              transform: `translateY(${value})`,\n            };\n          default:\n            return {\n              transform: `translate(${value})`,\n            };\n        }\n      }\n    }\n\n    return null;\n  }\n\n  return function (input: string) {\n    const classNames = input.split(\" \").map((i) => i.trim());\n    return classNames\n      .map((c) => {\n        if (c in cache) {\n          return cache[c];\n        }\n        const parsed = parseUtility(c);\n        if (parsed) {\n          cache[c] = parsed;\n          return parsed;\n        }\n        return null;\n      })\n      .filter((i) => i)\n      .reduce((acc, val) => {\n        const { transform, ...rest } = val;\n        return {\n          ...acc,\n          ...(transform\n            ? { transform: [acc.transform ?? \"\", transform].join(\" \").trim() }\n            : null),\n          ...rest,\n        };\n      }, {}) as StyleSheet;\n  };\n}\n\nexport default createTw;\n"],"names":["resolveConfig"],"mappings":"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"}